"use client";
import FormHeader from "@/components/backoffice/inputformComponents/FormHeader";
import ImageInput from "@/components/backoffice/inputformComponents/ImageInput";
import SubmitButton from "@/components/backoffice/inputformComponents/SubmitButton";
import TextareaInput from "@/components/backoffice/inputformComponents/TextAreaInput";
import TextInput from "@/components/backoffice/inputformComponents/TextInput";
import { useState } from "react";
import { useForm } from "react-hook-form";
import "@uploadthing/react/styles.css";
import { makePostRequest, makePutRequest } from "@/lib/apiRequest";
import { generateSlug } from "@/lib/generateSlug";
import ToggleInput from "@/components/backoffice/inputformComponents/ToggleInput";
import SelectInput from "@/components/backoffice/inputformComponents/SelectInput";
import { useRouter } from "next/navigation";

const NewMarketForm = ({ categories, marketData }) => {
  const initialImageUrl = marketData?.logoUrl ?? "";
  const id = marketData?.id ?? "";
  const [imageUrl, setImageUrl] = useState(initialImageUrl);
  const [loading, setLoading] = useState(false);
  //UPLOADING IMAGE STATES
  const [uploadLoading, setUploadLoading] = useState(false);
  let isUploading = false;
  const {
    register,
    reset,
    handleSubmit,
    watch,
    formState: { errors },
  } = useForm({
    defaultValues: {
      isActive: true,
      ...marketData,
    },
  });

  const isActive = watch("isActive");

  //REDIRECTING
  const router = useRouter();
  const redirectFunction = () => {
    router.push("/dashboard/markets");
  };
  //get isUploading value from imageinput component

  const getValue = (value) => {
    isUploading = value;
    if (isUploading) {
      setUploadLoading(true);
    } else {
      setUploadLoading(false);
    }
  };

  const onSubmitForm = async (data) => {
    //generate the title slug
    const slug = generateSlug(data.title);
    data.slug = slug;
    data.logoUrl = imageUrl;
    if (id) {
      makePutRequest(
        setLoading,
        `api/markets/${id}`,
        data,
        "Market",
        reset,
        redirectFunction
      );
    } else {
      makePostRequest(
        setLoading,
        "api/markets",
        data,
        "Market",
        reset,
        redirectFunction
      );
      setImageUrl("");
    }
  };
  return (
    <div>
      <FormHeader headerTitle="New Market" />
      {/* ID = autogenerated | TITLE | SLUG = autogenerated | LOGO(IMG) | DESCRIPTION */}
      <form
        onSubmit={handleSubmit(onSubmitForm)}
        className="w-full max-w-4xl p-4 bg-gray-200 border border-gray-200 rounded-lg shadow sm:p-6 md:p-8 dark:bg-gray-800 dark:border-gray-700 mx-auto my-3 "
      >
        <div className="flex flex-col gap-4 sm:grid-cols-2 sm:gap-6">
          <TextInput
            label="Market Name"
            name="title"
            register={register}
            errors={errors}
            placeHolder="Market Name"
          />
          <SelectInput
            label="Select categories"
            name="categoryIds"
            register={register}
            options={categories}
            multiple={true}
          />
          <TextareaInput
            label="Market Description"
            name="description"
            register={register}
            errors={errors}
            placeHolder="Market description"
          />
          {/* CHECKBOX TOGGLE */}
          <ToggleInput
            label="Market Status"
            nameWatched="isActive"
            isTrue={isActive}
            trueTitle="Active"
            falseTitle="Inactive"
            register={register}
          />
          {/* CONFIGURE ENDPOINT IN COREJS  */}
          <ImageInput
            label="Market logo"
            endpoint="marketLogoUploader"
            imageUrl={imageUrl}
            setImageUrl={setImageUrl}
            getValue={getValue}
          />

          <SubmitButton
            buttonTitle={id ? "Update Market" : "Create Market"}
            loadingButtonTitle={`${
              id ? "Updating" : "Creating"
            }  new market please wait...`}
            isLoading={loading}
            uploadLoading={uploadLoading}
            loadingUploadTitle="Uploading Market logo please wait..."
          />
        </div>
      </form>
    </div>
  );
};

export default NewMarketForm;
